{"version":3,"sources":["components/Buttons.js","components/Santa-Dance.js","App.js","index.js"],"names":["MyButton","myID","myText","myClick","useState","hovered","setHovered","useEffect","document","body","style","cursor","y","position","castShadow","receiveShadow","onPointerOver","onPointerOut","scale","onClick","onTap","onPointerDown","args","radius","smoothness","attach","color","anchorX","anchorY","SantaDance","props","group","useRef","useGLTF","nodes","materials","animations","useAnimations","actions","names","index","setIndex","reset","fadeIn","play","fadeOut","i","ref","dispose","map","text","object","mixamorigHips","material","_Character","geometry","SM_Chr_Santa_01","skeleton","rotation","App","concurrent","shadowMap","camera","fov","shadow-mapSize-width","shadow-mapSize-height","fallback","Math","PI","transparent","opacity","preload","console","clear","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.229643dc.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\r\nimport { RoundedBox, Text } from \"@react-three/drei\"\r\nimport { a, useSpring } from \"@react-spring/three\"\r\n\r\nexport default function MyButton({ myID, myText, myClick }) {\r\n  const [hovered, setHovered] = useState(false)\r\n  useEffect(() => void (document.body.style.cursor = hovered ? \"pointer\" : \"auto\"), [hovered])\r\n\r\n  const y = 0.15 + 0.27 * myID\r\n  return (\r\n    <group position={[1, y, -0.7]}>\r\n      <RoundedBox\r\n        castShadow\r\n        receiveShadow\r\n        onPointerOver={() => setHovered(true)}\r\n        onPointerOut={() => setHovered(false)}\r\n        scale={hovered ? [1.1,1.1,1]:[1,1,1]}\r\n        onClick={() => myClick(myID)}\r\n        onTap={() => myClick(myID)}\r\n        onPointerDown={() => myClick(myID)}\r\n        args={[1, 0.15, 0.05]} // Width, Height and Depth of the box\r\n        radius={0.05} // Border-Radius of the box\r\n        smoothness={2} // Optional, number of subdivisions\r\n      >\r\n        <meshStandardMaterial  attach=\"material\" color={hovered ?\"#35512b\": \"#FFFFFF\"} />\r\n      </RoundedBox>\r\n      <Text\r\n          position={[0, 0, 0.026]}\r\n          color={hovered ?\"#FFFFFF\":\"#000000\" } // default\r\n          anchorX=\"center\" // default\r\n          anchorY=\"middle\" // default\r\n        >\r\n          {myText}\r\n        </Text>\r\n    </group>\r\n  )\r\n}\r\n/*\r\n<RoundedBox\r\n        position={[-0.95, 0, -0.05]}\r\n        args={[3, 0.2, 0.05]} // Width, Height and Depth of the box\r\n        radius={0.05} // Border-Radius of the box\r\n        smoothness={2} // Optional, number of subdivisions\r\n      >\r\n        <meshBasicMaterial attach=\"material\" color=\"#35512b\" />\r\n      </RoundedBox>\r\n\r\n*/\r\n","import React, { useRef, useState, useEffect } from \"react\"\nimport { useGLTF } from \"@react-three/drei/useGLTF\"\nimport { useAnimations } from \"@react-three/drei\"\nimport MyButton from \"./Buttons\"\n\nexport default function SantaDance(props) {\n  const group = useRef()\n  const { nodes, materials, animations } = useGLTF(\"./models/Santa-Dance.glb\")\n  const { actions, names } = useAnimations(animations, group)\n  const [index, setIndex] = useState(0)\n\n  useEffect(() => {\n    actions[names[index]].reset().fadeIn(0.3).play()\n    return () => actions[names[index]].fadeOut(0.3)\n  }, [index, actions, names])\n\n  const onClick = (i) => setIndex(i)\n\n  return (\n    <group ref={group} {...props} dispose={null}>\n      {names.map((text, i) => <MyButton key={`button_${i}`} myID={i} myText={text} myClick={onClick} />)}\n      <group position={[0, 0, 0]} scale={[0.01, 0.01, 0.01]}>\n        <primitive object={nodes.mixamorigHips} />\n        <skinnedMesh\n          castShadow\n          receiveShadow\n          material={materials._Character}\n          geometry={nodes.SM_Chr_Santa_01.geometry}\n          skeleton={nodes.SM_Chr_Santa_01.skeleton}\n          position={[0, 0, 0]}\n          rotation={[0, 0, 0]}\n        />\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload(\"./models/Santa-Dance.glb\")\n","import React, { Suspense } from \"react\"\nimport { Canvas } from \"react-three-fiber\"\nimport { OrbitControls, PositionalAudio } from \"@react-three/drei\"\nimport SantaDance from \"./components/Santa-Dance\"\n\nexport default function App() {\n  return (\n    <Canvas concurrent shadowMap camera={{ position: [0.25, 0, 4.5], fov: 50 }}>\n      <ambientLight />\n      <directionalLight position={[-5, 5, 5]} castShadow shadow-mapSize-width={1024} shadow-mapSize-height={1024} />\n      <group position={[-0.5, -0.7, 0]}>\n        <Suspense fallback={null}>\n          <SantaDance />\n        </Suspense>\n      </group>\n      <mesh rotation={[-0.5 * Math.PI, 0, 0]} position={[0, -0.7, 0]} receiveShadow>\n        <planeBufferGeometry args={[10, 10, 1, 1]} />\n        <shadowMaterial transparent opacity={0.2} />\n      </mesh>\n      <OrbitControls />\n    </Canvas>\n  )\n}\n","import ReactDOM from \"react-dom\"\nimport React from \"react\"\nimport \"./styles.css\"\nimport App from \"./App\"\n\nconsole.clear()\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}